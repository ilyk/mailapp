name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-4-dev libgdk-pixbuf2.0-dev libpango1.0-dev libcairo2-dev libglib2.0-dev libwebkit2gtk-4.1-dev libadwaita-1-dev libsecret-1-dev libsqlite3-dev libssl-dev pkg-config
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --workspace -- --check
    
    - name: Run clippy
      run: cargo clippy --workspace --all-targets --all-features -- -D warnings
    
    - name: Build
      run: cargo build --verbose --workspace
    
    - name: Run tests
      run: cargo test --verbose --workspace
      env:
        RUST_BACKTRACE: 1

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-4-dev libgdk-pixbuf2.0-dev libpango1.0-dev libcairo2-dev libglib2.0-dev libwebkit2gtk-4.1-dev libadwaita-1-dev libsecret-1-dev libsqlite3-dev libssl-dev pkg-config
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build release
      run: cargo build --release --verbose --workspace
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: asgard-mail-linux
        path: target/release/asgard-mail*
        if-no-files-found: warn

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build release
      run: cargo build --release --verbose --workspace
      env:
        # Windows-specific environment variables for GTK
        GTK_INSTALL_PATH: "C:\\msys64\\mingw64"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: asgard-mail-windows
        path: target/release/asgard-mail*.exe
        if-no-files-found: warn

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        brew install gtk4 gdk-pixbuf pango cairo glib gio webkit2gtk libadwaita libsecret sqlite openssl pkg-config
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Build release
      run: cargo build --release --verbose --workspace
      env:
        PKG_CONFIG_PATH: "/opt/homebrew/lib/pkgconfig"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: asgard-mail-macos
        path: target/release/asgard-mail*
        if-no-files-found: warn

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit
